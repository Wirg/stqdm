name: Tests

on:
  push:
    branches: [ main, releases ]
  pull_request:
    branches: [ main, releases ]
  schedule:
    - cron: "0 4 * * *"

concurrency:
  group: tests-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        poetry-version: [ "1.1.10" ]
        python-version: [ 3.8, 3.9 ]
        tqdm-version: [ "==4.50", "==4.63", "" ]
        streamlit-version: [ "==0.66", "==1.8", "" ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/install_dependencies
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ matrix.poetry-version }}
          tqdm-version: ${{ matrix.tqdm-version }}
          streamlit-version: ${{ matrix.streamlit-version }}

  flake8:
    runs-on: ubuntu-latest
    needs: build-dependencies
    strategy:
      matrix:
        poetry-version: [ "1.1.10" ]
        python-version: [ 3.8, 3.9 ]
        tqdm-version: [ "==4.50", "==4.63", "" ]
        streamlit-version: [ "==0.66", "==1.8", "" ]
    steps:
      - uses: actions/checkout@v3
      - name: Cache Venv
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('**/poetry.lock') }}-tqdm-${{ matrix.tqdm-version }}-streamlit-${{ matrix.streamlit-version }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('**/poetry.lock') }}-tqdm-${{ matrix.tqdm-version }}-streamlit-${{ matrix.streamlit-version }}
      - name: Lint with flake8
        run: |
          source ~/.venv/bin/activate
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --statistics

  test:
    runs-on: ubuntu-latest
    needs: build-dependencies
    strategy:
      matrix:
        poetry-version: [ "1.1.10" ]
        python-version: [ 3.8, 3.9 ]
        tqdm-version: [ "==4.50", "==4.63", "" ]
        streamlit-version: [ "==0.66", "==1.8", "" ]
    steps:
      - uses: actions/checkout@v3
      - name: Cache Venv
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('**/poetry.lock') }}-tqdm-${{ matrix.tqdm-version }}-streamlit-${{ matrix.streamlit-version }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('**/poetry.lock') }}-tqdm-${{ matrix.tqdm-version }}-streamlit-${{ matrix.streamlit-version }}
      - name: Test with pytest
        run: |
          source ~/.venv/bin/activate
          pytest --cov-report xml:codecov.xml
      - name: Codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

  black:
    runs-on: ubuntu-latest
    needs: build-dependencies
    strategy:
      matrix:
        poetry-version: [ "1.1.10" ]
        python-version: [ 3.9 ]
        tqdm-version: [ "" ]
        streamlit-version: [ "" ]
    steps:
      - uses: actions/checkout@v3
      - name: Cache Venv
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('**/poetry.lock') }}-tqdm-${{ matrix.tqdm-version }}-streamlit-${{ matrix.streamlit-version }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('**/poetry.lock') }}-tqdm-${{ matrix.tqdm-version }}-streamlit-${{ matrix.streamlit-version }}
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Lint with Black
        run: |
          source ~/.venv/bin/activate
          black . --check
